name: Deploy to Server
on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Build Frontend
        run: |
          cd frontend
          npm install --legacy-peer-deps
          npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  build-backend:
    runs-on: ubuntu-22.04
    needs: build-frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          java-version: '20'
          distribution: 'temurin'
      - uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/src/main/resources/static
      - name: Build Backend
        run: mvn -B package --file backend/pom.xml
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      - uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/target/digimon-tcg-sim.jar

  dev-deploy:
    name: Push to Dev Server
    runs-on: ubuntu-latest
    needs: build-backend
    environment: Dev
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: backend/target

      - name: Deploy to Dev Server
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ vars.USERNAME }}
          TARGET: ${{ vars.DEPLOY_PATH }}
          SOURCE: backend/target
          PORT: ${{ secrets.PORT }}


  start-dev-server:
    name: Start Dev Server
    runs-on: ubuntu-latest
    needs: dev-deploy
    environment: Dev
    steps:
      - uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ vars.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo /usr/sbin/service project-drasil restart


  deploy:
    name: Push to Server
    runs-on: ubuntu-latest
    needs: build-backend
    environment: Musubi
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: backend/target

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ vars.USERNAME }}
          TARGET: ${{ vars.DEPLOY_PATH }}
          SOURCE: backend/target


  start-server:
    name: Start Server
    runs-on: ubuntu-latest
    needs: deploy
    environment: Musubi
    steps:
      - uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ vars.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo /usr/sbin/service project-drasil restart

  # Disable bots until they work again so they do not dos server
  # deploy-bot:
  #   name: Push Bot to Server
  #   runs-on: ubuntu-latest
  #   needs: start-server
  #   environment: Musubi
  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v3
  #     - name: Deploy to Server
  #       uses: easingthemes/ssh-deploy@v2.1.5
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         REMOTE_HOST: ${{ secrets.HOST }}
  #         REMOTE_USER: ${{ vars.USERNAME }}
  #         TARGET: ${{ vars.DEPLOY_PATH }}
  #         SOURCE: ai